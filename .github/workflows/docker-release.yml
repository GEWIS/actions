# reusable workflow
name: Docker Release

on:
  workflow_call:
    inputs:
      projects:
        required: true
        description: 'Comma-separated list of projects to release'
        type: string
      version:
        required: true
        description: 'Version of the Docker release'
        type: string
      docker-registry:
        required: true
        description: 'Docker registry to push the Docker image to'
        type: string
      github-registry:
        required: false
        description: 'Whether to push the image to the GitHub registry'
        type: string
      env-file:
        required: false
        description: 'Contents of the ENV file to use during building, should only be used as an exception.'
        type: string
      docker-paths:
        required: true
        description: 'Comma-separated list of Docker paths corresponding to each project'
        type: string
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ inputs.version != '' }}
    permissions:
      packages: write
    container:
      image: docker:dind
    strategy:
      matrix:
        project: ${{ fromJson(inputs.projects) }}
        docker-path: ${{ fromJson(inputs.docker-paths) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment
        if: ${{ inputs.env-file != '' }}
        env:
          ENV_FILE: ${{ inputs.env-file }}
        run: |
          echo "${ENV_FILE}" > ${{ matrix.project }}/.env

      - name: Extract Image Name
        id: extract
        run: |
          input="${{ matrix.docker-path }}"
          result="${input#*/}"
          echo "part=$result" >> "${GITHUB_OUTPUT}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry (GitHub)
        if: ${{ inputs.github-registry == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image (GitHub)
        if: ${{ inputs.github-registry == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/gewis/${{ steps.extract.outputs.part }}:latest
            ghcr.io/gewis/${{ steps.extract.outputs.part }}:${{inputs.version}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ matrix.project }}/Dockerfile

      - name: Login to Registry (Custom)
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker-registry }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Docker Image (Custom)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ inputs.docker-registry }}/${{ matrix.docker-path }}:latest
            ${{ inputs.docker-registry }}/${{ matrix.docker-path }}:${{ inputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ matrix.project }}/Dockerfile
