name: "Build and Lint TypeScript Project"
description: "Reusable action to build and lint a TypeScript project."

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        description: "The directory where the TypeScript project is located."
        type: string
        default: "."
      node-version:
        required: true
        type: string
        description: "The node version required for the TypeScript project."
        default: "20.x"
        # options:
        #  - 22.x
        #  - 20.x
        #  - 18.x
      package-manager:
        required: true
        type: string
        description: "The package manager to use for the TypeScript project."
        default: "npm"
        # options:
        #  - yarn
        #  - npm
      prepare-command:
        required: false
        type: string
        description: "Command to run directly after checkout."
      cleanup-command:
        required: false
        type: string
        description: "Command to run after the workflow (even if failed)."
      lint:
        type: boolean
        description: "Use the lint step."
        default: true
      format:
        type: boolean
        description: "Use the format step."
        default: false
      test:
        type: boolean
        description: "Use the test step."
        default: false
      build:
        type: boolean
        description: "Use the build step."
        default: true

jobs:
  build-and-lint-yarn:
    if: ${{ inputs.package-manager == 'yarn' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        run: ${{ inputs.prepare-command }}
        if: ${{ inputs.prepare-command != '' }}

      - name: Set Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install dependencies
        uses: borales/actions-yarn@v4
        with:
          cmd: install
          dir: ${{ inputs.working-directory }}

      - name: Lint the project
        uses: borales/actions-yarn@v4
        with:
          cmd: lint
          dir: ${{ inputs.working-directory }}
        if: ${{ inputs.step-lint }}

      - name: Format the project
        uses: borales/actions-yarn@v4
        with:
          cmd: format
          dir: ${{ inputs.working-directory }}
        if: ${{ inputs.step-format }}

      - name: Test the project
        uses: borales/actions-yarn@v4
        with:
          cmd: test
          dir: ${{ inputs.working-directory }}
        if: ${{ inputs.step-test }}

      - name: Build the project
        uses: borales/actions-yarn@v4
        with:
          cmd: build
          dir: ${{ inputs.working-directory }}
        if: ${{ inputs.step-build }}

      - name: Cleanup 
        run: ${{ inputs.cleanup-command }}
        if: ${{ inputs.cleanup-command != '' && always() }}

  build-and-lint-npm:
    if: ${{ inputs.package-manager == 'npm' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        run: ${{ inputs.prepare-command }}
        if: ${{ inputs.prepare-command != '' }}

      - name: Set Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: npm install

      - name: Lint the project
        working-directory: ${{ inputs.working-directory }}
        run: npm run lint
        if: ${{ inputs.step-lint }}

      - name: Format the project
        working-directory: ${{ inputs.working-directory }}
        run: npm run format
        if: ${{ inputs.step-format }}

      - name: Test the project
        working-directory: ${{ inputs.working-directory }}
        run: npm run test
        if: ${{ inputs.step-test }}

      - name: Build the project
        working-directory: ${{ inputs.working-directory }}
        run: npm run build
        if: ${{ inputs.step-build }}

      - name: Cleanup 
        run: ${{ inputs.cleanup-command }}
        if: ${{ inputs.cleanup-command != '' && always() }}
